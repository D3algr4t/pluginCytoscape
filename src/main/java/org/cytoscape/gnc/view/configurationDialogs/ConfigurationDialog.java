package org.cytoscape.gnc.view.configurationDialogs;

import java.io.BufferedReader;
import java.io.File;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import org.cytoscape.gnc.controller.tasks.ExecuteGNCTask;
import org.cytoscape.gnc.controller.utils.CySwing;
import org.cytoscape.gnc.controller.utils.NetworkAdapter;
import org.cytoscape.work.TaskIterator;
import org.cytoscape.work.TaskManager;

/**
 * @license Apache License V2 <http://www.apache.org/licenses/LICENSE-2.0.html>
 * @author Juan José Díaz Montaña
 */
public class ConfigurationDialog extends javax.swing.JDialog {
    private final TaskManager taskManager;
    private final Map<String, String> preloadedDatabases = new HashMap<String, String>();
    private final Map<String, String> customDatabases = new HashMap<String, String>();
    private final DefaultListModel<String> databaseListModel; 
    
    /**
     * Creates new form NewJDialog
     */
    public ConfigurationDialog(TaskManager taskManager) {
        super(CySwing.getDesktopJFrame(), true);
        preloadedDatabases.put("BD3 (Test)", "/databases/BD3.txt");
        preloadedDatabases.put("Biogrid (Human)", "/databases/Biogrid-Human.txt");
        preloadedDatabases.put("Biogrid (Yeast)", "/databases/Biogrid-Yeast.txt");
        preloadedDatabases.put("GeneMania (Human)", "/databases/GeneMania-Human.txt");
        preloadedDatabases.put("GeneMania (Yeast)", "/databases/GeneMania-Yeast.txt");
        preloadedDatabases.put("SGD", "/databases/SGD.txt");
        preloadedDatabases.put("YeastNet (V2)", "/databases/YeastNetV2.txt");
        preloadedDatabases.put("HSA000203", "/databases/hsa000203.txt");
        
        databaseListModel = new DefaultListModel<String>() {
            String[] strings = preloadedDatabases.keySet().toArray(new String[preloadedDatabases.size()]);
            @Override
            public int getSize() { return strings.length; }
            @Override
            public String getElementAt(int i) { return strings[i]; }
        };
        
        initComponents();
        setLocationRelativeTo(CySwing.getDesktopJFrame());
        this.taskManager = taskManager;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        databasePanel = new javax.swing.JLayeredPane();
        loadCustomDatabaseButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        databaseList = new javax.swing.JList();
        runGNCButton = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 344, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 112, Short.MAX_VALUE)
        );

        setTitle("GNC");
        setResizable(false);

        databasePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Database"));

        loadCustomDatabaseButton.setText("Load custom database");
        loadCustomDatabaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadCustomDatabaseButtonActionPerformed(evt);
            }
        });

        databaseList.setModel(databaseListModel);
        jScrollPane1.setViewportView(databaseList);

        javax.swing.GroupLayout databasePanelLayout = new javax.swing.GroupLayout(databasePanel);
        databasePanel.setLayout(databasePanelLayout);
        databasePanelLayout.setHorizontalGroup(
            databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(databasePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(databasePanelLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(loadCustomDatabaseButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        databasePanelLayout.setVerticalGroup(
            databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, databasePanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadCustomDatabaseButton)
                .addContainerGap())
        );
        databasePanel.setLayer(loadCustomDatabaseButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        databasePanel.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        runGNCButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        runGNCButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exec.gif"))); // NOI18N
        runGNCButton.setText("Run GNC");
        runGNCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runGNCButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(databasePanel)
                    .addComponent(runGNCButton, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(databasePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(runGNCButton)
                .addContainerGap())
        );

        databasePanel.getAccessibleContext().setAccessibleName("Datbase");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void runGNCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runGNCButtonActionPerformed
        String database = databaseList.getSelectedValue().toString();
        if (database == null) {
            CySwing.displayPopUpMessage("No database selected.");
            return;
        }
        this.setVisible(false);
        
        if (preloadedDatabases.containsKey(database)) {
            database = preloadedDatabases.get(database);
        }
        
        BufferedReader br = new BufferedReader(new InputStreamReader(this.getClass().getClassLoader().getResourceAsStream(database)));
        
        taskManager.execute(new TaskIterator(new ExecuteGNCTask(NetworkAdapter.FileToGRN(database, br))));
    }//GEN-LAST:event_runGNCButtonActionPerformed

    private void loadCustomDatabaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadCustomDatabaseButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int returnValue = fileChooser.showOpenDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
          File selectedFile = fileChooser.getSelectedFile();
          customDatabases.put(selectedFile.getName(), selectedFile.getAbsolutePath());
          databaseListModel.addElement(selectedFile.getAbsolutePath());
          databaseList.setSelectedValue(selectedFile.getAbsolutePath(), true);
        }
    }//GEN-LAST:event_loadCustomDatabaseButtonActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList databaseList;
    private javax.swing.JLayeredPane databasePanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadCustomDatabaseButton;
    private javax.swing.JButton runGNCButton;
    // End of variables declaration//GEN-END:variables
}
